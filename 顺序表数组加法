/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
 void reverse(int* nums,int begin,int end)
{
    while(begin < end)
    {
        int tmp = nums[begin];
        nums[begin]=nums[end];
        nums[end]=tmp;
        end--;
        begin++;

    }
}
int* addToArrayForm(int* A, int ASize, int K, int* returnSize){
    int* arr1=(int*)malloc(10001*sizeof(int));
    int arrSize=0;
    int x1,x2,add,next;
    next = 0;
    while(ASize>0 || K>0)
    {
        
        x1=0;
        if(ASize>0)
        {
          x1=A[ASize-1];
          ASize--;
        }
        x2=0;
        if(K>0)
        {
        x2=K%10;
        K=K/10;
        }
        add = x1+x2+next;
        if(add>9)
        {
            add=add%10;
            next=1;
        }
        else
        {
            next=0;
        }
        
        arr1[arrSize]=add;
        arrSize++;
    }
   if(next=1)
   {
      arr1[arrSize]=1;
   }
   reverse(arr1,0,arrSize-1);
  *returnSize = arrSize;
   return arr1;
}
